
@model Hackaton.Models.User.UserData
@using Hackaton.Data.Enums

<head>
    <link href="~/css/site.css" rel="stylesheet" type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
          crossorigin="anonymous" />
</head>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    @* <div class="form-horizontal">
        <h4>User Data</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.CopyPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CopyPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CopyPassword, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Role, Enum.GetValues(typeof(Roles)).Cast<Roles>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() }), "Select Role", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div> *@
    <div style="display:flex;justify-content:center;align-items: center;">
    <div class="main_registration">
            <a href="@Url.Action("Index", "Home")" style="text-decoration: none;">
            <div style="display: flex; justify-content: center;" class="registration_top">
            <div class="registration_img"></div>
            <div class="registration_highlight">
                <h3 class="edn shadow rounded fs-1">СИЛА В ЄДНАННІ</h3>
                <h3 class="zcl shadow rounded fs-2  ">СИЛА В ЗЦІЛЕННІ</h3>
            </div>
            </div> 
        </a> 
    <div class="container text-center form_registr">
        <div class="row">
               
                <div class="col">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Ім'я" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

            <div class="col">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", placeholder = "Прізвище" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
          </div>
        <div class="row">
            <div class="col">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Електронна пошта" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="col">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", placeholder = "Вік" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
          </div>
        <div class="row">
          <div class="col input_registr">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Пароль", type = "password" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
          <div class="col ">
                    @Html.EditorFor(model => model.CopyPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Підтвердіть пароль", type = "password" } })
                    @Html.ValidationMessageFor(model => model.CopyPassword, "", new { @class = "text-danger" })
          </div>
        </div>
        <div class="row">
          <div class="col">
            @* <select class="form-select shadow" id="floatingSelect" aria-label="Floating label select example input shadow">
                <option selected>Роль</option>
                <option value="1">Волонтер</option>
                <option value="2">Потребуючий допомоги</option>
              </select>   *@
                    @Html.DropDownListFor(model => model.Role, Enum.GetValues(typeof(Roles)).Cast<Roles>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() }), "Select Role", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
              </div>
          <div class="row button_registr">
            <div class="col ">
                        <button  type="submit" value="Create" class="btn btn-secondary btn-lg butt_register">Зареєструватись</button>
            </div>
        </div>
      </div>
    </div>
    </div>

    <div class="footer_forms"></div>
    </div>

    <script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"
  ></script>
  }



